{"version":3,"sources":["reducers/errorReducer.js","services/login.js","reducers/loginReducer.js","hooks/index.js","components/Notification.js","components/Login.js","services/posts.js","reducers/postReducer.js","reducers/notificationReducer.js","components/AddNew.js","components/Togglable.js","reducers/filterReducer.js","components/Search.js","components/PostList.js","components/Logout.js","components/NavBar.js","components/Users.js","components/User.js","services/comments.js","reducers/commentsReducer.js","components/Comments.js","components/Post.js","services/users.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["error","time","dispatch","regenerator_default","a","async","_context","prev","next","type","data","setTimeout","stop","errorReducer","state","arguments","length","undefined","action","services_login","credentials","response","awrap","axios","post","sent","abrupt","logout","setUser","user","_context2","loginReducer","useField","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","event","target","reset","ConnectedNotifications","connect","notification","props","react_default","createElement","Container","Message","style","paddingTop","success","Login","withRouter","username","password","components_Notification","Form","onSubmit","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","history","push","t0","Field","Input","assign","focus","placeholder","Button","color","mapDispatchToProps","baseUrl","token","services_posts","getAll","get","create","newObject","config","headers","Authorization","updateLikes","url","object","_context3","concat","id","objectSpread2","likes","put","updatePost","_context4","remove","_context5","delete","setToken","newToken","postReducer","deletedPost","filter","toConsumableArray","newPost","map","id2","likesToChange","find","p","changedLikesPost","notifictionReducer","createPost","postService","updatedPost","newPost_notify","postName","updatePost_notify","title","author","checkExisting","newTitle","posts","titleMatch","addPost","postObject","postMatch","confirm","Header","size","console","log","name","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","onClick","buttonLabel","className","children","marginTop","filterReducer","filterChange","ConnectedFilter","postsToShow","_ref","toLowerCase","includes","visiblePosts","components_Togglable","components_AddNew","components_Search","Table","striped","celled","Body","Row","key","Cell","react_router_dom","to","Logout","removeItem","Menu","inverted","Item","link","position","components_Logout","users","List","services_comments","postId","commentsReducer","addComment","newComment","commentsService","comments","comment","text","commentObject","DelButton","deletePost","Post","href","rel","as","labelPosition","like_notification","Icon","Label","basic","pointing","Post_DelButton","delete_notification","components_Comments","updatedLikes","services_users","usersReducer","initializePosts","getUsers","usersService","initComments","login","useEffect","loggedUserJSON","getItem","parse","catch","message","LoggedIn","components_NavBar","react_router","exact","path","render","components_PostList","components_Login","components_Users","match","components_User","params","_ref2","components_Post","reducer","combineReducers","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1225bf8f.chunk.js","sourcesContent":["const errorReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n  case \"EMPTY\":\r\n    return \"\"\r\n  case \"ERROR\": {\r\n    return action.data\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const error = (error, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"ERROR\",\r\n      data: error\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport default errorReducer\r\n","import axios from \"axios\"\r\nconst loginUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(loginUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from \"../services/login\"\r\n\r\nconst loginReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n  case \"SETUSER\":\r\n    return action.data\r\n  case \"LOGOUT\":\r\n    return action.data\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    const user = null\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"SETUSER\",\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport default loginReducer\r\n","import { useState } from \"react\"\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState(\"\")\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = (value) => {\r\n    setValue(\"\")\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container, Message } from \"semantic-ui-react\"\r\n\r\nconst Notification = (props) => {\r\n\r\n  const { notification, error } = props\r\n\r\n  if (error !== \"\") {\r\n    return (\r\n      <Container>\r\n        {(error && <Message error> {error} </Message>)}\r\n      </Container>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container style={{ paddingTop: \"20px\" }}>\r\n        {(notification && <Message success> {notification} </Message>)}\r\n      </Container>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notification: state.notification,\r\n    error: state.error,\r\n  }\r\n}\r\n\r\nconst ConnectedNotifications = connect(mapStateToProps)(Notification)\r\nexport default ConnectedNotifications\r\n\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { error } from \"../reducers/errorReducer\"\r\nimport { setUser } from \"../reducers/loginReducer\"\r\nimport loginService from \"../services/login\"\r\nimport { useField } from \"../hooks\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport Notification from \"./Notification\"\r\nimport { Form, Button, Container, Input } from 'semantic-ui-react'\r\n\r\nlet LoginNoHistory = props => {\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault()\r\n    try {\r\n      const credentials = { username: username.value, password: password.value }\r\n      const user = await loginService.login(credentials)\r\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user))\r\n      props.history.push(\"/\")\r\n      props.setUser(user.username)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 30)\r\n    }\r\n  }\r\n  const username = useField(\"text\")\r\n  const password = useField(\"text\")\r\n\r\n  return (\r\n    <Container>\r\n      <Container>Login: user, Password: password</Container>\r\n      <Notification />\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Field>\r\n          <Input focus placeholder='Enter username' {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Input focus placeholder='Enter password' {...password} />\r\n        </Form.Field>\r\n        <Button type='submit' color=\"violet\">Login</Button>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Login = withRouter(LoginNoHistory)\r\n\r\nconst mapDispatchToProps = {\r\n  error, setUser\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Login)\r\n","import axios from \"axios\"\r\n\r\nconst baseUrl = \"http://localhost:3003/api/posts\"\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async() => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst updateLikes = async post => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const url = `${baseUrl}/${post.id}`\r\n  const object = { ...post, likes: post.likes+1 }\r\n  const response = await axios.put(url, object, config)\r\n  return response.data\r\n}\r\n\r\nconst updatePost = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async post => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const url = `${baseUrl}/${post.id}`\r\n  const response = await axios.delete(url, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { getAll, create, updateLikes, updatePost, remove, setToken }\r\n","import postService from \"../services/posts\"\r\n\r\nconst postReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case \"INIT_POSTS\":\r\n    return action.data\r\n  case \"DELETE\": {\r\n    const deletedPost = action.data\r\n    const deletedPostList = state.filter(post => post.id !== deletedPost.id)\r\n    return deletedPostList}\r\n  case \"NEW_POST\":\r\n    return [...state, action.data]\r\n  case \"UPDATE\":{\r\n    const newPost = action.data\r\n    const updatedPostList = state.map(post => post.id !== newPost.id ? post : newPost)\r\n    return updatedPostList }\r\n  case \"LIKE\": {\r\n    const id2 = action.data.id\r\n    const likesToChange = state.find(p => p.id === id2)\r\n    const changedLikesPost = { ...likesToChange, likes: likesToChange.likes+1 }\r\n    const updatedLikesList = state.map(post => post.id !== id2 ? post : changedLikesPost)\r\n    return updatedLikesList }\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const createPost = newObject => {\r\n  return async dispatch => {\r\n    const newPost = await postService.create(newObject)\r\n    dispatch({\r\n      type: \"NEW_POST\",\r\n      data: newPost,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deletePost = post => {\r\n  return async dispatch => {\r\n    await postService.remove(post)\r\n    dispatch({\r\n      type: \"DELETE\",\r\n      data: post,\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializePosts = () => {\r\n  return async dispatch => {\r\n    const posts = await postService.getAll()\r\n    dispatch({\r\n      type: \"INIT_POSTS\",\r\n      data: posts,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updatePost = (id, newPost) => {\r\n  return async dispatch => {\r\n    const updatedPost = await postService.updatePost(id, newPost)\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      data: updatedPost\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLikes = post => {\r\n  return async dispatch => {\r\n    const updatedLikes = await postService.updateLikes(post)\r\n    dispatch({\r\n      type: \"LIKE\",\r\n      data: updatedLikes\r\n    })\r\n  }\r\n}\r\n\r\nexport default postReducer","const notifictionReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n  case \"LIKE_NOTIFICATION\": {\r\n    const postName = action.data\r\n    const like_notification = \"You liked post '\" + postName + \"'\"\r\n    return like_notification }\r\n  case \"DELETE_NOTIFICATION\":{\r\n    const postName = action.data\r\n    const delete_notification = \"You deleted post '\" + postName + \"'\"\r\n    return delete_notification }\r\n  case \"UPDATE_NOTIFICATION\":{\r\n    const postName = action.data\r\n    const delete_notification = \"You updated post '\" + postName + \"'\"\r\n    return delete_notification }\r\n  case \"EMPTY\":\r\n    return \"\"\r\n  case \"NEWPOST_NOTIFICATION\":{\r\n    const postName = action.data\r\n    const new_name = \"You created new post '\" + postName + \"'\"\r\n    return new_name }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport const like_notification = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"LIKE_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport const delete_notification = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"DELETE_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport const newPost_notify = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"NEWPOST_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport const updatePost_notify = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"UPDATE_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport default notifictionReducer\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createPost, updatePost } from \"../reducers/postReducer\"\r\nimport postService from \"../services/posts\"\r\nimport { newPost_notify, updatePost_notify } from \"../reducers/notificationReducer\"\r\nimport { error } from \"../reducers/errorReducer\"\r\nimport { Form, Button, Header, Container, Input } from \"semantic-ui-react\"\r\n\r\nconst AddNew = props => {\r\n  const { title, author, url } = props\r\n\r\n  const handleData = async event => {\r\n    event.preventDefault()\r\n    console.log(event.target)\r\n    const postObject = {\r\n      title: event.target.title.value,\r\n      author: event.target.author.value,\r\n      url: event.target.url.value,\r\n      likes: 0\r\n    }\r\n    event.target.title.value = \"\"\r\n    event.target.author.value = \"\"\r\n    event.target.url.value = \"\"\r\n    const postMatch = await checkExisting(postObject.title)\r\n    postMatch === undefined\r\n      ? addPost(postObject)\r\n      : updatePost(postMatch, postObject)\r\n\r\n  }\r\n\r\n  const checkExisting = async newTitle => {\r\n    const posts = await postService.getAll()\r\n    const titleMatch = await posts.find(post =>\r\n      post !== undefined ? post.title === newTitle : undefined\r\n    )\r\n    return titleMatch\r\n  }\r\n\r\n  const addPost = async postObject => {\r\n    try {\r\n      await props.createPost(postObject)\r\n      props.newPost_notify(postObject.title, 50)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 50)\r\n    }\r\n  }\r\n\r\n  const updatePost = async (postMatch, postObject) => {\r\n    if (\r\n      window.confirm(\r\n        `${postMatch.title} already exists. Do you want to replace it?`\r\n      )\r\n    ) {\r\n      try {\r\n        await props.updatePost(postMatch.id, postObject)\r\n        props.updatePost_notify(postObject.title, 50)\r\n      } catch (error) {\r\n        props.error(error.response.data.error, 50)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header size=\"medium\">Create new post</Header>\r\n      <Form onSubmit={handleData} id=\"addForm\">\r\n        <Form.Field>\r\n          <Input name=\"title\" placeholder='Enter title' {...title} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Input name=\"author\" placeholder='Enter author' {...author} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Input name=\"url\" placeholder='Enter URL' {...url} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" color=\"violet\">Add</Button>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createPost, updatePost, newPost_notify, updatePost_notify, error,\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddNew)","import React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Button, Container } from \"semantic-ui-react\"\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"20px\" }}>\r\n      <Container style={hideWhenVisible}>\r\n        <Button color=\"violet\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </Container>\r\n      <Container style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <Button color=\"red\" onClick={toggleVisibility} style={{ marginTop: \"10px\" }}>Cancel</Button>\r\n      </Container>\r\n    </Container>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","const filter = \"\"\r\n\r\nconst filterReducer = (state = filter, action) => {\r\n  switch (action.type) {\r\n  case \"SET_FILTER\":\r\n    return action.filter\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const filterChange = filter => {\r\n  return {\r\n    type: \"SET_FILTER\",\r\n    filter\r\n  }\r\n}\r\n\r\nexport default filterReducer\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterChange } from \"../reducers/filterReducer\";\r\nimport { Input } from 'semantic-ui-react'\r\n\r\nconst Search = props => {\r\n  const handleChange = event => {\r\n    props.filterChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      style={{ paddingTop: \"20px\" }}\r\n      placeholder='Search'\r\n      onChange={handleChange}\r\n      value={props.filter}/>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  filterChange,\r\n}\r\n\r\nconst ConnectedFilter = connect(mapStateToProps, mapDispatchToProps)(Search);\r\nexport default ConnectedFilter","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\"\r\nimport { Table, Container } from \"semantic-ui-react\"\r\nimport AddNew from \"./AddNew\"\r\nimport Togglable from \"./Togglable\"\r\nimport Search from \"./Search\"\r\n\r\nconst PostList = props => {\r\n  return (\r\n    <Container>\r\n      <Togglable buttonLabel=\"New Post\">\r\n        <AddNew />\r\n      </Togglable>\r\n      <Search />\r\n      <Table striped celled>\r\n        <Table.Body>\r\n          {props.visiblePosts.map(post => (\r\n            <Table.Row key={post.id}>\r\n              <Table.Cell>\r\n                <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n              </Table.Cell>\r\n              <Table.Cell>{post.user.username}</Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst postsToShow = ({ posts, filter }) => {\r\n  if (filter !== undefined) {\r\n    const filteredPosts = posts.filter(post =>\r\n      post.title.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n    return filteredPosts\r\n  } else {\r\n    return posts\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    visiblePosts: postsToShow(state)\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, null\r\n)(PostList)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { logout, setUser } from \"../reducers/loginReducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nconst LogoutNoHistory = props => {\r\n\r\n  const userLogout = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await props.logout()\r\n      window.localStorage.removeItem(\"loggedBlogAppUser\", JSON.stringify(user))\r\n      props.setUser(null)\r\n      props.history.push(\"/login\")\r\n    } catch (error) {\r\n      props.error(error, 30)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button onClick={userLogout} color=\"violet\">Log out</Button>\r\n  )\r\n}\r\n\r\nconst Logout = withRouter(LogoutNoHistory)\r\n\r\nexport default connect(null, { logout, setUser })(Logout)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport Logout from \"./Logout\"\r\nimport { Menu } from \"semantic-ui-react\"\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <div>\r\n      <Menu inverted color=\"green\">\r\n        <Menu.Item link>\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item link>\r\n          <Link to=\"/users\">Users</Link>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item link>\r\n            {props.user ? (\r\n              <em>\r\n                {props.user} logged in <Logout />\r\n              </em>\r\n            ) : (\r\n              <Link to=\"/login\">login</Link>\r\n            )}\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, null)(NavBar)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\nimport { Table } from \"semantic-ui-react\"\r\n\r\nconst Users = props => {\r\n  return (\r\n    <Table striped celled>\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <Table.Cell>Name</Table.Cell>\r\n          <Table.Cell>No of posts</Table.Cell>\r\n        </Table.Row>\r\n        {props.users.map(user => (\r\n          <Table.Row key={user.id}>\r\n            <Table.Cell>\r\n              <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n            </Table.Cell>\r\n            <Table.Cell>{user.posts.length}</Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Users)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Link} from 'react-router-dom'\r\nimport { List, Container, Header } from \"semantic-ui-react\"\r\n\r\nconst User = props => {\r\n  if (props.user === undefined) {\r\n    return null\r\n  }\r\n  return (\r\n    <Container>\r\n      <Header size=\"large\" style={{ paddingTop: \"30px\" }}>{props.user.username}</Header>\r\n      <Header size=\"medium\">Added blogs</Header>\r\n      <List>\r\n        {props.user.posts.map(post => (\r\n          <List.Item key={post.id}>\r\n            <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default connect(null, null)(User)","import axios from \"axios\"\r\nimport token from \"./posts\"\r\n\r\nconst baseUrl = \"http://localhost:3003/api/posts\"\r\n\r\nconst getAllComments = async id => {\r\n  const url = `${baseUrl}/${id}/comments`\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const url = `${baseUrl}/${newObject.postId}/comments`\r\n  const response = await axios.post(url, newObject, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAllComments, addComment }","import commentsService from \"../services/comments\"\r\n\r\nconst commentsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case \"INIT_COMMENTS\":\r\n    return action.data\r\n  case \"NEW_COMMENT\":\r\n    return [...state, action.data]\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initComments = () => {\r\n  return async dispatch => {\r\n    const comments = await commentsService.getAllComments()\r\n    dispatch({\r\n      type: \"INIT_COMMENTS\",\r\n      data: comments\r\n    })\r\n  }\r\n}\r\n\r\nexport const addComment = newObject => {\r\n  return async dispatch => {\r\n    const newComment = await commentsService.addComment(newObject)\r\n    dispatch({\r\n      type: \"NEW_COMMENT\",\r\n      data: newComment\r\n    })\r\n  }\r\n}\r\n\r\nexport default commentsReducer\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { addComment } from \"../reducers/commentsReducer\"\r\nimport { Form, Button, Container, Input, Header, List } from 'semantic-ui-react'\r\n\r\nconst Comments = (props) => {\r\n  const { comments, postId } = props\r\n\r\n  const addComment = async event => {\r\n    event.preventDefault()\r\n    const commentObject = {\r\n      postId: postId,\r\n      text: event.target.comment.value,\r\n    }\r\n    event.target.comment.value = \"\"\r\n    try {\r\n      await props.addComment(commentObject)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 30)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"30px\" }}>\r\n      <Header>Comments</Header>\r\n      <List>\r\n        {props.comments\r\n          .filter(comment => postId === comment.postId)\r\n          .map(comment => (\r\n            <List.Item key={comment.id}>{comment.text}</List.Item>\r\n          ))}\r\n      </List>\r\n\r\n      <Form onSubmit={addComment}>\r\n        <Container>\r\n          <Input name=\"comment\" placeholder=\"Write your comment:\" {...comments.text} />\r\n        </Container>\r\n        <Container style={{ marginTop: \"10px\" }}>\r\n          <Button type=\"submit\" color=\"violet\">Add comment</Button>\r\n        </Container>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    comments: state.comments\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addComment\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Comments)\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { updateLikes, deletePost } from \"../reducers/postReducer\"\r\nimport { like_notification, delete_notification  } from \"../reducers/notificationReducer\"\r\nimport { error } from \"../reducers/errorReducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport Comments from \"./Comments\"\r\nimport { Header, Container, Icon, Button, Label } from \"semantic-ui-react\"\r\n\r\nconst PostNoHistory = (props) => {\r\n  const { post, user } = props\r\n\r\n  const giveLike = () => {\r\n    try {\r\n      props.updateLikes(post)\r\n      props.like_notification(post.title, 20)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 30)\r\n    }\r\n  }\r\n\r\n  const deletePost = () => {\r\n    try {\r\n      props.history.push(\"/\")\r\n      props.deletePost(post)\r\n      props.delete_notification(post.title, 20)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  if (props.post === undefined) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header size=\"large\">Author: {post.title}</Header>\r\n      <Container>Author: {post.author}</Container>\r\n      <a href={post.url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n        {\" \"}\r\n        Read more\r\n      </a>\r\n      <Container>Created by: {post.user.username} </Container>\r\n      <Button as=\"div\" labelPosition=\"right\" style={{ marginTop: \"20px\" }}>\r\n        <Button color=\"violet\" onClick={giveLike}>\r\n          <Icon name=\"heart\" />\r\n          Like\r\n        </Button>\r\n        <Label as=\"a\" basic color=\"violet\" pointing=\"left\">\r\n          {post.likes}\r\n        </Label>\r\n      </Button>\r\n      <Container>\r\n        {user !== null ? (\r\n          <DelButton post={post} deletePost={deletePost} />\r\n        ) : null}\r\n      </Container>\r\n      <Comments postId={post.id} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst DelButton = (props) => {\r\n  return (\r\n    <Button style={{ marginTop: \"10px\" }} value={props.post.id} onClick={props.deletePost} color=\"red\">\r\n      Remove\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst Post = withRouter(PostNoHistory)\r\n\r\nconst mapDispatchToProps = {\r\n  updateLikes, deletePost, like_notification, delete_notification, error,\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Post)\r\n\r\n","import axios from \"axios\"\r\n\r\nconst baseUrl = \"http://localhost:3003/api/users\"\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getUsers }","import usersService from \"../services/users\";\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case \"GET_USERS\":\r\n    return action.data\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const getUsers = () => {\r\n  return async dispatch => {\r\n    const users = await usersService.getUsers()\r\n    dispatch({\r\n      type: \"GET_USERS\",\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer","import React, { useEffect } from \"react\"\r\nimport Login from \"./components/Login\"\r\nimport PostList from \"./components/PostList\"\r\nimport NavBar from \"./components/NavBar\"\r\nimport Users from \"./components/Users\"\r\nimport User from \"./components/User\"\r\nimport Post from \"./components/Post\"\r\nimport Notification from \"./components/Notification\"\r\nimport postService from \"./services/posts\"\r\nimport { initializePosts } from \"./reducers/postReducer\"\r\nimport { initComments } from \"./reducers/commentsReducer\"\r\nimport { getUsers } from \"./reducers/usersReducer\"\r\nimport { logout, setUser } from \"./reducers/loginReducer\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\"\r\nimport { Container, Header } from \"semantic-ui-react\"\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      postService.setToken(user.token)\r\n      props.setUser(user.username)\r\n    }\r\n    props.getUsers()\r\n    props.initializePosts()\r\n    props.initComments().catch(error => {\r\n      console.log(error.message)\r\n    })\r\n  }, [])\r\n\r\n  const LoggedIn = () => {\r\n    return (\r\n      <div>\r\n        <NavBar user={props.user} />\r\n        <Notification />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const userById = id => {\r\n    return props.users.find(user => user.id === id);\r\n  }\r\n\r\n  const postById = id => {\r\n    return props.posts.find(post => post.id === id);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Container>\r\n          <Container>\r\n            {props.user === \"\" ? <Redirect to=\"/login\" /> : <Redirect to=\"/\" />}\r\n            <Header size=\"large\" style={{ paddingTop: \"30px\" }}>\r\n              Blog posts\r\n            </Header>\r\n          </Container>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <Container>\r\n                <LoggedIn />\r\n                <PostList user={props.user} />\r\n              </Container>\r\n            )}\r\n          />\r\n          <Route exact path=\"/login\" render={() => <Login />} />\r\n          <Route\r\n            path=\"/users\"\r\n            render={() => (\r\n              <Container>\r\n                <LoggedIn />\r\n                <Users user={props.user} />\r\n              </Container>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users/:id\"\r\n            render={({ match }) => <User user={userById(match.params.id)} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/posts/:id\"\r\n            render={({ match }) => (\r\n              <Container>\r\n                <LoggedIn />\r\n                <Post post={postById(match.params.id)} />\r\n              </Container>\r\n            )}\r\n          />\r\n        </Container>\r\n      </Router>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.login,\r\n    users: state.users,\r\n    posts: state.posts,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initializePosts, logout, setUser, getUsers, initComments\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport postReducer from \"./reducers/postReducer\"\r\nimport commentsReducer from \"./reducers/commentsReducer\"\r\nimport filterReducer from \"./reducers/filterReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport errorReducer from \"./reducers/errorReducer\"\r\nimport loginReducer from \"./reducers/loginReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\n\r\nconst reducer = combineReducers({\r\n  posts: postReducer,\r\n  filter: filterReducer,\r\n  notification: notificationReducer,\r\n  error: errorReducer,\r\n  login: loginReducer,\r\n  users: usersReducer,\r\n  comments: commentsReducer\r\n})\r\n\r\nconst store = createStore(reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}