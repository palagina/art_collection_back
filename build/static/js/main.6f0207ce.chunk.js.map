{"version":3,"sources":["reducers/errorReducer.js","services/login.js","reducers/loginReducer.js","hooks/index.js","components/Notification.js","components/Login.js","services/posts.js","reducers/postReducer.js","reducers/notificationReducer.js","components/AddNew.js","components/Togglable.js","reducers/filterReducer.js","components/Search.js","components/PostList.js","components/Logout.js","components/NavBar.js","components/Footer.js","components/Users.js","components/User.js","services/comments.js","reducers/commentsReducer.js","components/Comments.js","components/Post.js","services/users.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["error","time","dispatch","a","type","data","setTimeout","errorReducer","state","action","login","credentials","axios","post","response","logout","setUser","user","loginReducer","useField","useState","value","setValue","onChange","event","target","reset","ConnectedNotifications","connect","notification","props","Container","style","height","Message","paddingTop","success","Login","withRouter","onSubmit","preventDefault","username","password","loginService","window","localStorage","setItem","JSON","stringify","history","push","middle","aligned","width","marginTop","backgroundColor","padding","borderRadius","Header","color","textAlign","Form","Field","id","Input","focus","placeholder","Button","mapDispatchToProps","baseUrl","token","getAll","get","create","newObject","config","headers","Authorization","updateLikes","url","object","likes","put","updatePost","remove","delete","setToken","newToken","postReducer","deletedPost","deletedPostList","filter","newPost","updatedPostList","map","id2","likesToChange","find","p","changedLikesPost","updatedLikesList","notifictionReducer","postName","like_notification","delete_notification","new_name","createPost","postService","updatedPost","newPost_notify","updatePost_notify","title","author","handleData","postObject","checkExisting","undefined","postMatch","addPost","newTitle","posts","titleMatch","confirm","size","name","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","onClick","buttonLabel","className","children","filterReducer","filterChange","ConnectedFilter","postsToShow","toLowerCase","includes","visiblePosts","Table","striped","celled","Body","Row","key","Cell","to","Logout","userLogout","removeItem","Menu","inverted","Item","link","position","Segment","vertical","bottom","Grid","Column","as","content","href","Divider","section","List","horizontal","divided","users","length","getAllComments","addComment","postId","commentsReducer","commentsService","newComment","comments","userId","today","Date","timestamp","getDate","getMonth","getFullYear","getHours","getMinutes","commentObject","text","comment","Comment","Group","dividing","reply","TextArea","labelPosition","icon","Avatar","src","Math","floor","random","Content","Author","Metadata","Text","DelButton","deletePost","Post","rel","Icon","Label","basic","pointing","console","log","updatedLikes","getUsers","usersReducer","initializePosts","usersService","initComments","useEffect","loggedUserJSON","getItem","parse","catch","message","LoggedIn","exact","path","render","match","params","reducer","combineReducers","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6f0207ce.chunk.js","sourcesContent":["const errorReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n  case \"EMPTY\":\r\n    return \"\"\r\n  case \"ERROR\": {\r\n    return action.data\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const error = (error, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"ERROR\",\r\n      data: error\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport default errorReducer\r\n","import axios from \"axios\"\r\nconst loginUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(loginUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from \"../services/login\"\r\n\r\nconst loginReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n  case \"SETUSER\":\r\n    return action.data\r\n  case \"LOGOUT\":\r\n    return action.data\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    const user = null\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"SETUSER\",\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport default loginReducer\r\n","import { useState } from \"react\"\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState(\"\")\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = (value) => {\r\n    setValue(\"\")\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container, Message } from \"semantic-ui-react\"\r\n\r\nconst Notification = (props) => {\r\n\r\n  const { notification, error } = props\r\n\r\n  if (error !== \"\") {\r\n    return (\r\n      <Container style={{ height: \"50px\" }}>\r\n        {(error && <Message error> {error} </Message>)}\r\n      </Container>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container style={{ height: \"50px\", paddingTop:\"15px\" }}>\r\n        {(notification && <Message success> {notification} </Message>)}\r\n      </Container>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notification: state.notification,\r\n    error: state.error,\r\n  }\r\n}\r\n\r\nconst ConnectedNotifications = connect(mapStateToProps)(Notification)\r\nexport default ConnectedNotifications\r\n\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { error } from \"../reducers/errorReducer\"\r\nimport { setUser } from \"../reducers/loginReducer\"\r\nimport loginService from \"../services/login\"\r\nimport { useField } from \"../hooks\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport Notification from \"./Notification\"\r\nimport { Form, Header, Button, Container, Input } from 'semantic-ui-react'\r\n\r\nlet LoginNoHistory = props => {\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault()\r\n    try {\r\n      const credentials = { username: username.value, password: password.value }\r\n      const user = await loginService.login(credentials)\r\n      window.localStorage.setItem(\"loggedBlogAppUser\", JSON.stringify(user))\r\n      props.history.push(\"/\")\r\n      props.setUser(user.username)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 30)\r\n    }\r\n  }\r\n  const username = useField(\"text\")\r\n  const password = useField(\"text\")\r\n\r\n  return (\r\n    <Container middle=\"true\" aligned=\"true\" style={{ width: \"50%\", marginTop: \"10em\", backgroundColor: \"teal\", padding:\"3em\", borderRadius: \"10px\" }}>\r\n      <Header style={{ color: \"white\", textAlign: \"center\" }} >Log in to your account </Header>\r\n      <Container>Login: user</Container>\r\n      <Container>Password: password</Container>\r\n      <Notification/>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Field id=\"password\">\r\n          <Input focus placeholder=\"Enter username\" {...username}/>\r\n        </Form.Field>\r\n        <Form.Field id=\"password\">\r\n          <Input focus placeholder=\"Enter password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field id=\"login_button\">\r\n          <Button type=\"submit\" color=\"violet\">\r\n            Login\r\n          </Button>\r\n        </Form.Field>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Login = withRouter(LoginNoHistory)\r\n\r\nconst mapDispatchToProps = {\r\n  error, setUser\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Login)\r\n","import axios from \"axios\"\r\n\r\nconst baseUrl = \"https://article-collection-mp.herokuapp.com/api/posts\"\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async() => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst updateLikes = async post => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const url = `${baseUrl}/${post.id}`\r\n  const object = { ...post, likes: post.likes+1 }\r\n  const response = await axios.put(url, object, config)\r\n  return response.data\r\n}\r\n\r\nconst updatePost = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async post => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const url = `${baseUrl}/${post.id}`\r\n  const response = await axios.delete(url, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { getAll, create, updateLikes, updatePost, remove, setToken }\r\n","// eslint-disable-next-line react-hooks/rules-of-hooks\r\nimport postService from \"../services/posts\"\r\n\r\nconst postReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case \"INIT_POSTS\":\r\n    return action.data\r\n  case \"DELETE\": {\r\n    const deletedPost = action.data\r\n    const deletedPostList = state.filter(post => post.id !== deletedPost.id)\r\n    return deletedPostList}\r\n  case \"NEW_POST\":\r\n    return [...state, action.data]\r\n  case \"UPDATE\":{\r\n    const newPost = action.data\r\n    const updatedPostList = state.map(post => post.id !== newPost.id ? post : newPost)\r\n    return updatedPostList }\r\n  case \"LIKE\": {\r\n    const id2 = action.data.id\r\n    const likesToChange = state.find(p => p.id === id2)\r\n    const changedLikesPost = { ...likesToChange, likes: likesToChange.likes+1 }\r\n    const updatedLikesList = state.map(post => post.id !== id2 ? post : changedLikesPost)\r\n    return updatedLikesList }\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const createPost = newObject => {\r\n  return async dispatch => {\r\n    const newPost = await postService.create(newObject)\r\n    dispatch({\r\n      type: \"NEW_POST\",\r\n      data: newPost,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deletePost = post => {\r\n  return async dispatch => {\r\n    await postService.remove(post)\r\n    dispatch({\r\n      type: \"DELETE\",\r\n      data: post,\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializePosts = () => {\r\n  return async dispatch => {\r\n    const posts = await postService.getAll()\r\n    dispatch({\r\n      type: \"INIT_POSTS\",\r\n      data: posts,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updatePost = (id, newPost) => {\r\n  return async dispatch => {\r\n    const updatedPost = await postService.updatePost(id, newPost)\r\n    dispatch({\r\n      type: \"UPDATE\",\r\n      data: updatedPost\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLikes = post => {\r\n  return async dispatch => {\r\n    const updatedLikes = await postService.updateLikes(post)\r\n    dispatch({\r\n      type: \"LIKE\",\r\n      data: updatedLikes\r\n    })\r\n  }\r\n}\r\n\r\nexport default postReducer","const notifictionReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n  case \"LIKE_NOTIFICATION\": {\r\n    const postName = action.data\r\n    const like_notification = \"You liked post '\" + postName + \"'\"\r\n    return like_notification }\r\n  case \"DELETE_NOTIFICATION\":{\r\n    const postName = action.data\r\n    const delete_notification = \"You deleted post '\" + postName + \"'\"\r\n    return delete_notification }\r\n  case \"UPDATE_NOTIFICATION\":{\r\n    const postName = action.data\r\n    const delete_notification = \"You updated post '\" + postName + \"'\"\r\n    return delete_notification }\r\n  case \"EMPTY\":\r\n    return \"\"\r\n  case \"NEWPOST_NOTIFICATION\":{\r\n    const postName = action.data\r\n    const new_name = \"You created new post '\" + postName + \"'\"\r\n    return new_name }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport const like_notification = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"LIKE_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport const delete_notification = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"DELETE_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport const newPost_notify = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"NEWPOST_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport const updatePost_notify = (postName, time) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: \"UPDATE_NOTIFICATION\",\r\n      data: postName\r\n    })\r\n    setTimeout(() => dispatch({ type: \"EMPTY\" }), time + \"00\")\r\n  }\r\n}\r\n\r\nexport default notifictionReducer\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createPost, updatePost } from \"../reducers/postReducer\"\r\nimport postService from \"../services/posts\"\r\nimport { newPost_notify, updatePost_notify } from \"../reducers/notificationReducer\"\r\nimport { error } from \"../reducers/errorReducer\"\r\nimport { Form, Button, Header, Container, Input } from \"semantic-ui-react\"\r\n\r\nconst AddNew = props => {\r\n  const { title, author, url } = props\r\n\r\n  const handleData = async event => {\r\n    event.preventDefault()\r\n    const postObject = {\r\n      title: event.target.title.value,\r\n      author: event.target.author.value,\r\n      url: event.target.url.value,\r\n      likes: 0\r\n    }\r\n    event.target.title.value = \"\"\r\n    event.target.author.value = \"\"\r\n    event.target.url.value = \"\"\r\n    const postMatch = await checkExisting(postObject.title)\r\n    postMatch === undefined\r\n      ? addPost(postObject)\r\n      : updatePost(postMatch, postObject)\r\n\r\n  }\r\n\r\n  const checkExisting = async newTitle => {\r\n    const posts = await postService.getAll()\r\n    const titleMatch = await posts.find(post =>\r\n      post !== undefined ? post.title === newTitle : undefined\r\n    )\r\n    return titleMatch\r\n  }\r\n\r\n  const addPost = async postObject => {\r\n    try {\r\n      await props.createPost(postObject)\r\n      props.newPost_notify(postObject.title, 50)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 50)\r\n    }\r\n  }\r\n\r\n  const updatePost = async (postMatch, postObject) => {\r\n    if (\r\n      window.confirm(\r\n        `${postMatch.title} already exists. Do you want to replace it?`\r\n      )\r\n    ) {\r\n      try {\r\n        await props.updatePost(postMatch.id, postObject)\r\n        props.updatePost_notify(postObject.title, 50)\r\n      } catch (error) {\r\n        props.error(error.response.data.error, 50)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header size=\"medium\">Create new post</Header>\r\n      <Form onSubmit={handleData} id=\"addForm\">\r\n        <Form.Field>\r\n          <Input name=\"title\" placeholder='Enter title' {...title} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Input name=\"author\" placeholder='Enter author' {...author} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Input name=\"url\" placeholder='Enter URL' {...url} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" color=\"violet\">Add</Button>\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createPost, updatePost, newPost_notify, updatePost_notify, error,\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddNew)","import React, { useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Button, Container } from \"semantic-ui-react\"\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" }\r\n  const showWhenVisible = { display: visible ? \"\" : \"none\" }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"20px\" }}>\r\n      <Container style={hideWhenVisible}>\r\n        <Button color=\"violet\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </Container>\r\n      <Container style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <Button color=\"red\" onClick={toggleVisibility} style={{ marginTop: \"10px\" }}>Cancel</Button>\r\n      </Container>\r\n    </Container>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","const filter = \"\"\r\n\r\nconst filterReducer = (state = filter, action) => {\r\n  switch (action.type) {\r\n  case \"SET_FILTER\":\r\n    return action.filter\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const filterChange = filter => {\r\n  return {\r\n    type: \"SET_FILTER\",\r\n    filter\r\n  }\r\n}\r\n\r\nexport default filterReducer\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterChange } from \"../reducers/filterReducer\";\r\nimport { Input } from 'semantic-ui-react'\r\n\r\nconst Search = props => {\r\n  const handleChange = event => {\r\n    props.filterChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      style={{ paddingTop: \"20px\" }}\r\n      placeholder='Search'\r\n      onChange={handleChange}\r\n      value={props.filter}/>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  filterChange,\r\n}\r\n\r\nconst ConnectedFilter = connect(mapStateToProps, mapDispatchToProps)(Search);\r\nexport default ConnectedFilter","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\"\r\nimport { Table, Container } from \"semantic-ui-react\"\r\nimport AddNew from \"./AddNew\"\r\nimport Togglable from \"./Togglable\"\r\nimport Search from \"./Search\"\r\n\r\nconst PostList = props => {\r\n  return (\r\n    <Container>\r\n      <Togglable buttonLabel=\"New Post\">\r\n        <AddNew />\r\n      </Togglable>\r\n      <Search />\r\n      <Table striped celled>\r\n        <Table.Body>\r\n          {props.visiblePosts.map(post => (\r\n            <Table.Row key={post.id}>\r\n              <Table.Cell>\r\n                <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n              </Table.Cell>\r\n              <Table.Cell>{post.user.username}</Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst postsToShow = ({ posts, filter }) => {\r\n  if (filter !== undefined) {\r\n    const filteredPosts = posts.filter(post =>\r\n      post.title.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n    return filteredPosts\r\n  } else {\r\n    return posts\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    visiblePosts: postsToShow(state)\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, null\r\n)(PostList)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { logout, setUser } from \"../reducers/loginReducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nconst LogoutNoHistory = props => {\r\n\r\n  const userLogout = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await props.logout()\r\n      window.localStorage.removeItem(\"loggedBlogAppUser\", JSON.stringify(user))\r\n      props.setUser(null)\r\n      props.history.push(\"/login\")\r\n    } catch (error) {\r\n      props.error(error, 30)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button onClick={userLogout} color=\"violet\">Log out</Button>\r\n  )\r\n}\r\n\r\nconst Logout = withRouter(LogoutNoHistory)\r\n\r\nexport default connect(null, { logout, setUser })(Logout)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport Logout from \"./Logout\"\r\nimport { Menu } from \"semantic-ui-react\"\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <div>\r\n      <Menu inverted color=\"teal\">\r\n        <Menu.Item link>\r\n          <Link to=\"/\">Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item link>\r\n          <Link to=\"/users\">Users</Link>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item link>\r\n            {props.user ? (\r\n              <em>\r\n                {props.user} logged in <Logout />\r\n              </em>\r\n            ) : (\r\n              <Link to=\"/login\">login</Link>\r\n            )}\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, null)(NavBar)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Segment\r\n      inverted\r\n      color=\"teal\"\r\n      vertical\r\n      style={{ width:\"100%\", padding: \"5em 0em\", bottom: \"0px\", marginTop:\"3em\" }}\r\n    >\r\n      <Container textAlign=\"center\">\r\n        <Grid.Column width={7}>\r\n          <Header inverted as=\"h4\" content=\"Find the source code on GitHub\" />\r\n          <p>\r\n            Frontend{\" \"}\r\n            <a href=\"https://github.com/palagina/art_collection_front\">HERE</a>{\" \"}\r\n            and backend{\" \"}\r\n            <a href=\"https://github.com/palagina/art_collection_back\">HERE</a>{\" \"}\r\n            HERE\r\n          </p>\r\n        </Grid.Column>\r\n\r\n        <Divider inverted section />\r\n        <List horizontal inverted divided link size=\"small\">\r\n          <List.Item as=\"a\" href=\"#\">\r\n            Site Map\r\n          </List.Item>\r\n          <List.Item as=\"a\" href=\"#\">\r\n            Contact Us\r\n          </List.Item>\r\n          <List.Item as=\"a\" href=\"#\">\r\n            Terms and Conditions\r\n          </List.Item>\r\n          <List.Item as=\"a\" href=\"#\">\r\n            Privacy Policy\r\n          </List.Item>\r\n        </List>\r\n      </Container>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default connect(null, null)(Footer)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\nimport { Table } from \"semantic-ui-react\"\r\n\r\nconst Users = props => {\r\n  return (\r\n    <Table striped celled>\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <Table.Cell>Name</Table.Cell>\r\n          <Table.Cell>No of posts</Table.Cell>\r\n        </Table.Row>\r\n        {props.users.map(user => (\r\n          <Table.Row key={user.id}>\r\n            <Table.Cell>\r\n              <Link to={`/users/${user.id}`}>{user.username}</Link>\r\n            </Table.Cell>\r\n            <Table.Cell>{user.posts.length}</Table.Cell>\r\n          </Table.Row>\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Users)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Link} from 'react-router-dom'\r\nimport { List, Container, Header } from \"semantic-ui-react\"\r\n\r\nconst User = props => {\r\n  if (props.user === undefined) {\r\n    return null\r\n  }\r\n  return (\r\n    <Container>\r\n      <Header size=\"large\" style={{ paddingTop: \"30px\" }}>{props.user.username}</Header>\r\n      <Header size=\"medium\">Added articles</Header>\r\n      <List>\r\n        {props.user.posts.map(post => (\r\n          <List.Item key={post.id}>\r\n            <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default connect(null, null)(User)","import axios from \"axios\"\r\nimport token from \"./posts\"\r\n\r\nconst baseUrl = \"https://article-collection-mp.herokuapp.com/api/posts\"\r\n\r\nconst getAllComments = async id => {\r\n  const url = `${baseUrl}/${id}/comments`\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const url = `${baseUrl}/${newObject.postId}/comments`\r\n  const response = await axios.post(url, newObject, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAllComments, addComment }","import commentsService from \"../services/comments\"\r\n\r\nconst commentsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case \"INIT_COMMENTS\":\r\n    return action.data\r\n  case \"NEW_COMMENT\":\r\n    return [...state, action.data]\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initComments = () => {\r\n  return async dispatch => {\r\n    const comments = await commentsService.getAllComments()\r\n    dispatch({\r\n      type: \"INIT_COMMENTS\",\r\n      data: comments\r\n    })\r\n  }\r\n}\r\n\r\nexport const addComment = newObject => {\r\n  return async dispatch => {\r\n    const newComment = await commentsService.addComment(newObject)\r\n    dispatch({\r\n      type: \"NEW_COMMENT\",\r\n      data: newComment\r\n    })\r\n  }\r\n}\r\n\r\nexport default commentsReducer\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { addComment } from \"../reducers/commentsReducer\"\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Header,\r\n  List,\r\n  Comment,\r\n} from \"semantic-ui-react\"\r\n\r\nconst Comments = (props) => {\r\n  const { comments, postId, userId } = props\r\n\r\n  const addComment = async (event) => {\r\n    event.preventDefault()\r\n    var today = new Date()\r\n    var timestamp = today.getDate() +\"-\"+(today.getMonth() + 1) +\"-\" +today.getFullYear() +\" at \" +today.getHours() +\":\" +today.getMinutes()\r\n    const commentObject = {\r\n      postId: postId,\r\n      userId: userId,\r\n      text: event.target.comment.value,\r\n      timestamp: timestamp,\r\n    }\r\n    event.target.comment.value = \"\"\r\n    try {\r\n      await props.addComment(commentObject)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 30)\r\n    }\r\n  }\r\n\r\n  const randomAvatar = () => {\r\n    const avatarList = [\r\n      'https://react.semantic-ui.com/images/avatar/small/matt.jpg',\r\n      'https://react.semantic-ui.com/images/avatar/small/elliot.jpg',\r\n      'https://react.semantic-ui.com/images/avatar/small/jenny.jpg',\r\n      'https://react.semantic-ui.com/images/avatar/small/joe.jpg',\r\n      'https://react.semantic-ui.com/images/avatar/small/stevie.jpg',\r\n      'https://react.semantic-ui.com/images/avatar/small/steve.jpg'\r\n    ]\r\n    const random = Math.floor(Math.random() * Math.floor(5))\r\n    const src = avatarList[random]\r\n    return src\r\n  }\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"30px\" }}>\r\n      <Comment.Group>\r\n        <Header as=\"h3\" dividing>\r\n          Comments\r\n        </Header>\r\n\r\n        <Form reply onSubmit={addComment}>\r\n          <Form.TextArea\r\n            name=\"comment\"\r\n            placeholder=\"Write your comment:\"\r\n            {...comments.text}\r\n          />\r\n          <Button\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n            color=\"violet\"\r\n          />\r\n        </Form>\r\n\r\n        <List>\r\n          {props.comments\r\n            .filter((comment) => postId === comment.postId)\r\n            .map((comment) => (\r\n              <List.Item key={comment.id}>\r\n                <Comment>\r\n                  <Comment.Avatar src= {randomAvatar()} />\r\n                  <Comment.Content>\r\n                    <Comment.Author as=\"a\">Anonyme</Comment.Author>\r\n                    <Comment.Metadata>\r\n                      <div>{comment.timestamp}</div>\r\n                    </Comment.Metadata>\r\n                    <Comment.Text>{comment.text}</Comment.Text>\r\n                  </Comment.Content>\r\n                </Comment>\r\n              </List.Item>\r\n            ))}\r\n        </List>\r\n      </Comment.Group>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    comments: state.comments,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addComment,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { updateLikes, deletePost } from \"../reducers/postReducer\"\r\nimport { like_notification, delete_notification  } from \"../reducers/notificationReducer\"\r\nimport { error } from \"../reducers/errorReducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport Comments from \"./Comments\"\r\nimport { Header, Container, Icon, Button, Label } from \"semantic-ui-react\"\r\n\r\nconst PostNoHistory = (props) => {\r\n  const { post, user } = props\r\n\r\n  const giveLike = () => {\r\n    try {\r\n      props.updateLikes(post)\r\n      props.like_notification(post.title, 20)\r\n    } catch (error) {\r\n      props.error(error.response.data.error, 30)\r\n    }\r\n  }\r\n\r\n  const deletePost = () => {\r\n    try {\r\n      props.history.push(\"/\")\r\n      props.deletePost(post)\r\n      props.delete_notification(post.title, 20)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  if (props.post === undefined) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header size=\"large\">{post.name}</Header>\r\n      <Header as='h3'>Author: {post.author}</Header>\r\n      <Header as='h2'><a href={post.url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n        {\" \"}\r\n        Read here and tell us what you think in the comments!\r\n      </a></Header>\r\n      <Header as='h3'>Created by: {post.user.username} </Header>\r\n      <Button as=\"div\" labelPosition=\"right\" style={{ marginTop: \"20px\" }}>\r\n        <Button color=\"violet\" onClick={giveLike}>\r\n          <Icon name=\"heart\" />\r\n          Like\r\n        </Button>\r\n        <Label as=\"a\" basic color=\"violet\" pointing=\"left\">\r\n          {post.likes}\r\n        </Label>\r\n      </Button>\r\n      <Container>\r\n        {user !== null ? (\r\n          <DelButton post={post} deletePost={deletePost} />\r\n        ) : null}\r\n      </Container>\r\n      <Comments postId={post.id} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst DelButton = (props) => {\r\n  return (\r\n    <Button style={{ marginTop: \"10px\" }} value={props.post.id} onClick={props.deletePost} color=\"red\">\r\n      Remove\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst Post = withRouter(PostNoHistory)\r\n\r\nconst mapDispatchToProps = {\r\n  updateLikes, deletePost, like_notification, delete_notification, error,\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Post)\r\n\r\n","import axios from \"axios\"\r\n\r\nconst baseUrl = \"https://article-collection-mp.herokuapp.com/api/users\"\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getUsers }","import usersService from \"../services/users\";\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case \"GET_USERS\":\r\n    return action.data\r\n  default: return state\r\n  }\r\n}\r\n\r\nexport const getUsers = () => {\r\n  return async dispatch => {\r\n    const users = await usersService.getUsers()\r\n    dispatch({\r\n      type: \"GET_USERS\",\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer","import React, { useEffect } from \"react\"\r\nimport Login from \"./components/Login\"\r\nimport PostList from \"./components/PostList\"\r\nimport NavBar from \"./components/NavBar\"\r\nimport Footer from \"./components/Footer\"\r\nimport Users from \"./components/Users\"\r\nimport User from \"./components/User\"\r\nimport Post from \"./components/Post\"\r\nimport Notification from \"./components/Notification\"\r\nimport postService from \"./services/posts\"\r\nimport { initializePosts } from \"./reducers/postReducer\"\r\nimport { initComments } from \"./reducers/commentsReducer\"\r\nimport { getUsers } from \"./reducers/usersReducer\"\r\nimport { logout, setUser } from \"./reducers/loginReducer\"\r\nimport { connect } from \"react-redux\"\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\"\r\nimport { Container, Header } from \"semantic-ui-react\"\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogAppUser\")\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      postService.setToken(user.token)\r\n      props.setUser(user.username)\r\n    }\r\n    props.getUsers()\r\n    props.initializePosts()\r\n    props.initComments().catch(error => {\r\n      console.log(error.message)\r\n    })\r\n  }, [])\r\n\r\n  const LoggedIn = () => {\r\n    return (\r\n      <div>\r\n        <Header size=\"large\" style={{ padding: \"30px 0px\" }}>\r\n          ARTICLES COLLECTION\r\n        </Header>\r\n        <NavBar user={props.user} />\r\n        <Notification />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const userById = id => {\r\n    return props.users.find(user => user.id === id);\r\n  }\r\n\r\n  const postById = id => {\r\n    return props.posts.find(post => post.id === id);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Container>\r\n          <Container>\r\n            {props.user === \"\" ? <Redirect to=\"/login\" /> : <Redirect to=\"/\" />}\r\n            \r\n          </Container>\r\n          <Route\r\n            exact path=\"/\"\r\n            render={() => (\r\n              <Container>\r\n                <LoggedIn />\r\n                <PostList user={props.user} />\r\n                <Footer />\r\n              </Container>\r\n            )}\r\n          />\r\n          <Route exact path=\"/login\" render={() => <Login />} />\r\n          <Route\r\n            exact path=\"/users\"\r\n            render={() => (\r\n              <Container>\r\n                <LoggedIn />\r\n                <Users user={props.user} />\r\n                <Footer />\r\n              </Container>\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/users/:id\"\r\n            render={({ match }) => (\r\n              <Container>\r\n                <LoggedIn />\r\n                <User user={userById(match.params.id)} />\r\n                <Footer />\r\n              </Container>\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/posts/:id\"\r\n            render={({ match }) => (\r\n              <Container>\r\n                <LoggedIn />\r\n                <Post post={postById(match.params.id)} />\r\n                <Footer />\r\n              </Container>\r\n            )}\r\n          />\r\n        </Container>\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.login,\r\n    users: state.users,\r\n    posts: state.posts,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initializePosts, logout, setUser, getUsers, initComments\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport postReducer from \"./reducers/postReducer\"\r\nimport commentsReducer from \"./reducers/commentsReducer\"\r\nimport filterReducer from \"./reducers/filterReducer\"\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport errorReducer from \"./reducers/errorReducer\"\r\nimport loginReducer from \"./reducers/loginReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\"\r\n\r\nconst reducer = combineReducers({\r\n  posts: postReducer,\r\n  filter: filterReducer,\r\n  notification: notificationReducer,\r\n  error: errorReducer,\r\n  login: loginReducer,\r\n  users: usersReducer,\r\n  comments: commentsReducer\r\n})\r\n\r\nconst store = createStore(reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport store from \"./store\"\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}